<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8">
        <script
  src="https://code.jquery.com/jquery-3.6.0.js"
  integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
  crossorigin="anonymous"></script>
  <script type="text/javascript" src="../node_modules/@ckeditor/ckeditor5-build-classic/build/ckeditor.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
        <title>글쓰기</title>
    </head>
    <body>
        
        <div class = "wrapper">

            <header>
                <nav class="navbar navbar-light bg-light">
                    <div class="container-fluid">

                        <a class="navbar-brand" href="/">
                          <img src="../../images/black-fag.png" alt="faggot" class="d-inline-block align-text-top">
                        </a>
      
                        <div id="title">
                          <h2>
                            <a id="titlea" href="<%= hrefTitle %>" >
                              <%= h2title %>
                            </a>
                          </h2>
                        </div>

                        <div>
                            <button style="cursor: default; border: transparent; background-color: transparent; color: transparent;" >ㅇㅇ</button>
                            <button style="cursor: default; border: transparent; background-color: transparent; color: transparent;" >ㅇㅇ</button>
                        </div>

                    </div>
                  </nav>
            </header>

            <div id="container">

              <form class="writingform">

              <h3>
                제목
              </h3>
              <input type="text" class="form-control" id="titleInput" placeholder="제목">
              <% if(islogged===false || islogged===undefined) { %>
              <h3>
                작성자
              </h3>
              <input type="text" class="form-control" id="authorInput" placeholder="작성자">
              
              <h3>
                비밀번호
              </h3>
              <input type="password" class="form-control" id="passwordInput" placeholder="비밀번호">
              <!-- <p>※이미지를 지울시에 undo할수 없습니다. 에디터에 다시 올려주세요</p> -->
              <% } %>
              <div id="editor">

              </div>

              <button class="btn btn-primary" id="submitButton">제출</button>
            </form>

            
            </div>

            <footer>
                
            </footer>

        </div>
        
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
    </body>
    <style>
      body, html
      {
        width:100%;
      }
      #titlea
      {
        text-decoration-line: none;;
      }
      .wrapper
      {
        width:90%;
        margin-left: auto; margin-right: auto;
      }
      .form-control
      {
        margin-bottom: 20px;
      }
      #authorInput , #passwordInput
      {
        width: 15%;
      }
      #submitButton
      {
        margin-top: 20px;
        float: right;
      }
      .ck-editor__editable_inline
      {
        min-height: 500px;
      }
    </style>
    <script>
      var title = document.getElementById('titleInput');
      var author = document.getElementById('authorInput');
      var password = document.getElementById('passwordInput');
      var submit = document.getElementById('submitButton');
      ClassicEditor
          .create( document.querySelector( '#editor' ),
          {
            ckfinder:
            {
              uploadUrl:"http://14.38.252.76/board/uploads"
            }
          })
          .then((editor) => {
            submit.addEventListener('click',async (e)=>
            {
              e.preventDefault();
              let titleVal = title.value;
              let authorVal = null;
              let passwordVal = null;
              let wchboard = window.location.href.split('=')[1];
              let content = editor.getData();
              console.log(content);d
              let isImage;
              if(author!==null && password!==null)
              {
                authorVal = author.value;
                passwordVal = password.value;
              }
              editor.getData().indexOf('<img') < 0 ? isImage = false : isImage = true;
              let data = 
                  {
                      method: 'POST',
                      headers:{
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify(
                        {
                          title:titleVal, 
                          author: authorVal, 
                          password: passwordVal,
                          isImage:isImage,
                          wchboard:wchboard,
                          content:content
                        })
                  };
              let res = await fetch('/board/write',data);
              let resData = res.json();
            })

            /* const model = editor.model;

            model.document.on('change:data', async (e)=>
            {
              let change = e.source.differ._cachedChangesWithGraveyard;
              if(change.length>1)//지워질때 graveyard의 길이는 2가 됨
              {
                if(change[1].type==='remove' && change[1].name.indexOf('image')!==-1)
                {
                  let imageName = change[0].position.nodeAfter._attrs.get('src').split('/')[2];
                  let data = 
                  {
                      method: 'POST',
                      headers:{
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({imageName:imageName})
                  };
                  let res = await fetch('/board/uploads/Image2',data);
                  let resData = res.json();
                }
              }
            }); */
          })
          .catch( error => {
            console.error( 'There was a problem initializing the editor.', error );
          } );
  </script>
</html>